name: Appsmith Helm Release Workflow

# This workflow package & publish new version for Helm chart to S3 bucket
# This workflow is automatically triggered when merging PR with target branch is `master`
on:
  push:
    branches:
      - "feature/helm-release-workflow"

  pull_request_target:
    types:
      - closed
    branches:
      - "master"
    paths:
      - "deploy/helm"


jobs:
  # The workflow only runs after PR had been merged
  if_merged:
    # if: github.event.pull_request_merged == true
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      HELM_DIRECTORY: ./deploy/helm
    defaults:
      run:
        working-directory: ${HELM_DIRECTORY}
        shell: bash
    steps:

      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.6.3

      - name: Configure AWS Credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check working space
        run: |
          echo ${{ github.workspace }}/${HELM_DIRECTORY}

      - name: Retrieve Helm version
        id: helm-version
        uses: KJ002/read-yaml@1.6
        with:
          file: "${{ github.workspace }}/${HELM_DIRECTORY}/Chart.yaml"
          key-path: '["version"]'

      - name: Check existing Helm version
        id: version-check
        run: |
          if aws s3 ls s3://${{ secrets.S3_DOMAIN }} | awk '{print $4}' | grep appsmith-${{ steps.helm-version.outputs.data }}.tgz; then
            echo "::set-output name=version_exist::true"
          else
            echo "::set-output name=version_exist::false"
          fi

      - name: Publish Helm
        if: steps.version-check.outputs.version_exist == 'false'
        run: |
          helm package .
          aws s3 cp s3://${{ secrets.S3_DOMAIN }}/index.yaml .
          helm repo index . --url http://${{ secrets.S3_DOMAIN }} --merge index.yaml
          aws s3 cp ./appsmith-${{ steps.helm-version.outputs.data }}.tgz s3://${{ secrets.S3_DOMAIN }} 
          aws s3 cp index.yaml s3://${{ secrets.S3_DOMAIN }} 